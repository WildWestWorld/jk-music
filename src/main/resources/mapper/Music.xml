<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wildwestworld.jkmusic.mapper.MusicMapper">


    <resultMap id="musicMap" type="com.wildwestworld.jkmusic.entity.Music">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="fileId" column="file_id"/>
        <result property="photoId" column="photo_id"/>

        <result property="description" column="description"/>
        <result property="musicState" column="music_state"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
<!--column="file_id"传入查询的参数，传入的参数得是原表的属性-->
        <association  property="file"  column="file_id"  select="getFileList">
            <!--            分页查询无法嵌套，所以得用子查询-->
            <!--            <result property="id" column="r_id"  />-->
            <!--            <result property="name" column="r_name"  />-->
            <!--            <result property="title" column="r_title" />-->
        </association >

        <association  property="photo"  column="photo_id"  select="getPhotoFile">

        </association >


<!--        <association  property="album"  column="id"  select="getAlbumByMusicId">-->

<!--        </association >-->

        <collection property="albumList" javaType="ArrayList" column="id"  select="getAlbumByMusicId">
            <!--            分页查询无法嵌套，所以得用子查询-->
            <!--            <result property="id" column="r_id"  />-->
            <!--            <result property="name" column="r_name"  />-->
            <!--            <result property="title" column="r_title" />-->
        </collection>


        <collection property="artistList" javaType="ArrayList" column="id"  select="getArtistList">
            <!--            分页查询无法嵌套，所以得用子查询-->
            <!--            <result property="id" column="r_id"  />-->
            <!--            <result property="name" column="r_name"  />-->
            <!--            <result property="title" column="r_title" />-->
        </collection>


        <collection property="tagList" javaType="ArrayList" column="id"  select="getTagList">
            <!--            分页查询无法嵌套，所以得用子查询-->
            <!--            <result property="id" column="r_id"  />-->
            <!--            <result property="name" column="r_name"  />-->
            <!--            <result property="title" column="r_title" />-->
        </collection>

    </resultMap>

    <resultMap id="ArtistMap" type="com.wildwestworld.jkmusic.entity.Artist">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="remark" column="remark"/>
        <result property="photoId" column="photo_id"/>
        <result property="artistState" column="artist_state"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>

        <association  property="photo"  column="photo_id"  select="getPhotoFile">

        </association >






<!--        <collection property="musicList" javaType="ArrayList" column="id" ofType="com.wildwestworld.jkmusic.entity.Role" select="getMusicList">-->

<!--        </collection>-->
    </resultMap>


    <resultMap id="AlbumMap" type="com.wildwestworld.jkmusic.entity.Album">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="photoId" column="photo_id"/>
        <result property="albumState" column="album_state"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="recommended" column="recommended"/>
        <result property="recommendFactor" column="recommend_factor"/>

        <association  property="photo"  column="photo_id"  select="getPhotoFile">

        </association >


    </resultMap>

    <resultMap id="TagMap" type="com.wildwestworld.jkmusic.entity.Tag">
        <result property="id" column="id"/>
        <result property="name" column="name"/>

        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>


    </resultMap>



    <select id="getPage" resultMap="musicMap">
        select * from  `music` where `music`.name like concat ('%',#{name},'%')

    </select>

    <select id="getMusicList" resultMap="musicMap">
        select * from  `music` where `music`.name like concat ('%',#{name},'%')

    </select>

    <select id="selectMusicById" resultMap="musicMap">
        select * from  `music` where `music`.id =#{id}

    </select>

    <!--    子查询-->
    <select id="getFileList" resultType="com.wildwestworld.jkmusic.entity.File">
        select *
        from `file` as f
        where  f.id =#{file_id}
    </select>

    <select id="getPhotoFile" resultType="com.wildwestworld.jkmusic.entity.File">
        select *
        from `file` as f
        where  f.id =#{photo_id}
    </select>



    <select id="userList" resultMap="musicMap">
        select * from  `music`

    </select>

    <select id="getArtistList" resultMap="ArtistMap">
        select *
        from `artist` as a
        left join `artist_music` as am on a.id =am.artist_id
        where  am.music_id =#{id}
    </select>

    <select id="getTagList" resultMap="TagMap">
        select *
        from `tag` as t
        left join `tag_music` as tm on t.id =tm.tag_id
        where  tm.music_id =#{id}
    </select>

    <select id="getAlbumByMusicId" resultMap="AlbumMap">
        select *
        from `album` as al
        left join `album_music` as alm on al.id =alm.album_id
        where  alm.music_id =#{id}
    </select>


    <insert id="insertArtistMusic"  parameterType="com.wildwestworld.jkmusic.entity.Music">
        insert into artist_music(artist_id, music_id) values
        <foreach collection="artistList" item="item" separator=",">
            ( #{item.id},#{id})
        </foreach>
    </insert>



    <delete id="deleteAllById"  parameterType = "com.wildwestworld.jkmusic.entity.Music">
        delete from `artist_music` where music_id = #{id} AND artist_id in
        <foreach collection="artistList"  item="item"   open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <insert id="batchInsertMusicArtist"  >
        insert into artist_music(artist_id,music_id) values
        <foreach collection="needInsertIdList" item="item" separator=",">
            ( #{item},#{music.id})
        </foreach>
    </insert>

    <delete id="batchDeleteMusicArtistById"  >
        delete from `artist_music` where music_id  = #{music.id} AND artist_id in
        <foreach collection="needDeleteIdList"  item="item"   open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteAllMusicArtistById"  >
        delete from `artist_music` where music_id = #{music.id} AND artist_id in
        <foreach collection="music.artistList"  item="item"   open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <insert id="batchInsertMusicAlbum"  >
        insert into album_music(album_id,music_id) values
        <foreach collection="needInsertIdList" item="item" separator=",">
            ( #{item},#{music.id})
        </foreach>
    </insert>

    <delete id="batchDeleteMusicAlbumById"  >
        delete from `album_music` where music_id  = #{music.id} AND album_id in
        <foreach collection="needDeleteIdList"  item="item"   open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <delete id="deleteAllMusicAlbumById"  >
        delete from `album_music` where music_id = #{music.id} AND album_id in
        <foreach collection="music.albumList"  item="item"   open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>


    <insert id="batchInsertMusicTag"  >
        insert into tag_music(tag_id,music_id) values
        <foreach collection="needInsertIdList" item="item" separator=",">
            ( #{item},#{music.id})
        </foreach>
    </insert>

    <delete id="batchDeleteMusicTagById"  >
        delete from `tag_music` where music_id  = #{music.id} AND tag_id in
        <foreach collection="needDeleteIdList"  item="item"   open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <delete id="deleteAllMusicTagById"  >
        delete from `tag_music` where music_id = #{music.id} AND tag_id in
        <foreach collection="music.tagList"  item="item"   open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>


</mapper>